# vim: filetype=sh

function getConfigs {

    curl --header "${1}" \
        --header "Accept: application/vnd.github.v3.raw" \
        "https://api.github.com/repos/fluffehGit/${2}/contents/etc/pacman.d/pacman.pkgs?ref=master"
        --output /etc/default/grub;

    mkdir /etc/pacman.d/hooks;

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/pacman.d%2Fhooks%2Fmirrorlist.hook/raw?ref=master" --output /etc/pacman.d/hooks/mirrorlist.hook;

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/pacman.d%2Fhooks%2Fpkglists.hook/raw?ref=master" --output /etc/pacman.d/hooks/pkglists.hook;

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/pacman.d%2Fhooks%2Frkhunter.hook/raw?ref=master" --output /etc/pacman.d/hooks/rkhunter.hook;

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/rkhunter.conf.local/raw?ref=master" --output /etc/rkhunter.conf.local;

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/tlp.conf/raw?ref=master" --output /etc/tlp.conf;

}

function setDotFiles {

    mkdir /home/$1/.dotfiles;
    git clone --bare https://gitlab.com/fluffehLab/dotfiles.git /home/$1/.dotfiles;
    rm --recursive --force /home/$1/.bash*;
    git --git-dir=/home/$1/.dotfiles --work-tree=/home/$1 checkout;
    git --git-dir=/home/$1/.dotfiles --work-tree=/home/$1 config --local status.showUntrackedFiles no;
}

function setYay {

    mkdir --parents $HOME/AUR/yay;
    git clone https://aur.archlinux.org/yay.git $HOME/AUR/yay;
    cd $HOME/AUR/yay;
    makepkg --syncdeps --install --rmdeps --clean --noconfirm;
    cd $HOME;

}

function setAURPkgs {

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${$2}/repository/files/pacman.aurpkgs.list/raw?ref=master" --output $HOME/aur.pkgs.list;
    yay -Syy --needed --nodiffmenu --answerclean All --removemake --cleanafter - < $HOME/aur.pkgs.list --noconfirm;
    rm --force $HOME/aur.pkgs.list;
}

function setSnapper {

    # Snapper setup
    # Below two lines needed bc snapper create-config creates .snapshots folder
    umount --force /.snapshots;
    rm --recursive --force /.snapshots;

    snapper --config root create-config /;

    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/snapper%2Fconfigs%2Froot/raw?ref=master" --output /etc/snapper/configs/root;

    chmod 755 /.snapshots;
    systemctl enable snapper-timeline.timer;
    systemctl enable snapper-cleanup.timer;
    systemctl enable grub-btrfs.path

}

function setApps {

    # ClamAV setup
    freshclam;
    systemctl enable clamav-freshclam.service;

    # Fangfrisch database
    sudo --user=clamav /usr/bin/fangfrisch --conf /etc/fangfrisch/fangfrisch.conf initdb;
    systemctl enable fangfrisch.timer;

    # etckeeper
    etckeeper init;
    etckeeper commit "fresh install";
    systemctl enable etckeeper.timer;

    # rkhunter
    rkhunter --propupd;
    curl --header "${1}" "https://gitlab.com/api/v4/projects/${2}/repository/files/systemd%2Fsystem%2Frkhunter.timer/raw?ref=master" --output /etc/sytemd/system/rkhunter.timer;
    systemctl enable rkhunter.timer.

    systemctl enable NetworkManager;
    systemctl enable bluetooth;
    systemctl enable tlp.service;

}
